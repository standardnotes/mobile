diff --git a/node_modules/react-native-webview/ios/RNCWebView.h b/node_modules/react-native-webview/ios/RNCWebView.h
index 4e94bed..b4349a9 100644
--- a/node_modules/react-native-webview/ios/RNCWebView.h
+++ b/node_modules/react-native-webview/ios/RNCWebView.h
@@ -35,6 +35,7 @@
 @property (nonatomic, assign) BOOL injectedJavaScriptBeforeContentLoadedForMainFrameOnly;
 @property (nonatomic, assign) BOOL scrollEnabled;
 @property (nonatomic, assign) BOOL sharedCookiesEnabled;
+@property (nonatomic, assign) BOOL autoManageStatusBarEnabled;
 @property (nonatomic, assign) BOOL pagingEnabled;
 @property (nonatomic, assign) CGFloat decelerationRate;
 @property (nonatomic, assign) BOOL allowsInlineMediaPlayback;
diff --git a/node_modules/react-native-webview/ios/RNCWebView.m b/node_modules/react-native-webview/ios/RNCWebView.m
index 11385cf..1bfff4d 100644
--- a/node_modules/react-native-webview/ios/RNCWebView.m
+++ b/node_modules/react-native-webview/ios/RNCWebView.m
@@ -123,6 +123,7 @@ - (instancetype)initWithFrame:(CGRect)frame
     _showsVerticalScrollIndicator = YES;
     _directionalLockEnabled = YES;
     _automaticallyAdjustContentInsets = YES;
+    _autoManageStatusBarEnabled = YES;
     _contentInset = UIEdgeInsetsZero;
     _savedKeyboardDisplayRequiresUserAction = YES;
     #if !TARGET_OS_OSX
@@ -314,6 +315,9 @@ - (void)removeFromSuperview
 -(void)showFullScreenVideoStatusBars
 {
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
+    if (!_autoManageStatusBarEnabled) {
+      return;
+    }
     _isFullScreenVideoOpen = YES;
     RCTUnsafeExecuteOnMainQueueSync(^{
       [RCTSharedApplication() setStatusBarStyle:UIStatusBarStyleLightContent animated:YES];
@@ -324,6 +328,9 @@ -(void)showFullScreenVideoStatusBars
 -(void)hideFullScreenVideoStatusBars
 {
 #pragma clang diagnostic ignored "-Wdeprecated-declarations"
+    if (!_autoManageStatusBarEnabled) {
+      return;
+    }
     _isFullScreenVideoOpen = NO;
     RCTUnsafeExecuteOnMainQueueSync(^{
       [RCTSharedApplication() setStatusBarHidden:self->_savedStatusBarHidden animated:YES];
diff --git a/node_modules/react-native-webview/ios/RNCWebViewManager.m b/node_modules/react-native-webview/ios/RNCWebViewManager.m
index b69cfbd..02ae2f4 100644
--- a/node_modules/react-native-webview/ios/RNCWebViewManager.m
+++ b/node_modules/react-native-webview/ios/RNCWebViewManager.m
@@ -54,6 +54,7 @@ - (RCTUIView *)view
 #endif
 RCT_EXPORT_VIEW_PROPERTY(contentInset, UIEdgeInsets)
 RCT_EXPORT_VIEW_PROPERTY(automaticallyAdjustContentInsets, BOOL)
+RCT_EXPORT_VIEW_PROPERTY(autoManageStatusBarEnabled, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(hideKeyboardAccessoryView, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(allowsBackForwardNavigationGestures, BOOL)
 RCT_EXPORT_VIEW_PROPERTY(incognito, BOOL)
diff --git a/node_modules/react-native-webview/lib/WebViewTypes.d.ts b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
index cf5c838..062f628 100644
--- a/node_modules/react-native-webview/lib/WebViewTypes.d.ts
+++ b/node_modules/react-native-webview/lib/WebViewTypes.d.ts
@@ -202,6 +202,7 @@ export interface IOSNativeWebViewProps extends CommonNativeWebViewProps {
     allowsInlineMediaPlayback?: boolean;
     allowsLinkPreview?: boolean;
     automaticallyAdjustContentInsets?: boolean;
+    autoManageStatusBarEnabled?: boolean;
     bounces?: boolean;
     contentInset?: ContentInsetProp;
     contentInsetAdjustmentBehavior?: ContentInsetAdjustmentBehavior;
@@ -493,6 +494,12 @@ export interface MacOSWebViewProps extends WebViewSharedProps {
      * @platform macos
      */
     sharedCookiesEnabled?: boolean;
+    /**
+     * Set true if StatusBar should be light when user watch video fullscreen.
+     * The default value is `true`.
+     * @platform ios
+     */
+    autoManageStatusBarEnabled?: boolean;
     /**
      * A Boolean value that determines whether scrolling is disabled in a particular direction.
      * The default value is `true`.
