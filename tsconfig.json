
{
    "compilerOptions": {
      /* Basic Options */
      "target": "esnext",                       /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
      "module": "ESNext",                     /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
      "lib": ["ESNext"],                           /* Specify library files to be included in the compilation. */
      "allowJs": true,                          /* Allow javascript files to be compiled. */
      "jsx": "react-native",                    /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
      "noEmit": true,                           /* Do not emit outputs. */
      "isolatedModules": false,                  /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */
      "strict": true,                           /* Enable all strict type-checking options. */
      "skipLibCheck": true,
      // "noImplicitAny": false,
      "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
      "baseUrl": "src",                          /* Base directory to resolve non-absolute module names. */
      // "paths": {},                           /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
      // "rootDirs": [],                        /* List of root folders whose combined content represents the structure of the project at runtime. */
      // "typeRoots": [],                       /* List of folders to include type definitions from. */
      // "types": [],                           /* Type declaration files to be included in compilation. */
      "allowSyntheticDefaultImports": true,     /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
      "esModuleInterop": true,                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
      "paths": {
        "@Components/*": ["./components/*"],
        "@Containers/*": ["./containers/*"],
        "@Models/*": ["./models/*"],
        "@Lib/*": ["./lib/*"],
        "@Screens/*": ["./screens/*"],
        "@Style/*": ["./style/*"],

      },
      "typeRoots": ["./src/types/*"],
      "resolveJsonModule": true,
    },
    "exclude": [
      "node_modules", "babel.config.js", "metro.config.js", "jest.config.js", "types"
    ]
  }
